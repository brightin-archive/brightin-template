# Include additional cops for linting RSpec specs. Make sure you have the
# `rubocop-rspec` gem installed.
require: rubocop-rspec

# For a full list of configuration options and defaults, see Rubocop's
# annotated default configuration file at
# https://github.com/bbatsov/rubocop/blob/master/config/default.yml

AllCops:
  # Exclude automatically generated files.
  Exclude:
    - db/schema.rb
    - bin/**/*
    - script/**/*
    - vendor/**/*
  TargetRubyVersion: 2.3

Style/FrozenStringLiteralComment:
  Enabled: false

Rails:
  Enabled: true

Style/CollectionMethods:
  # Mapping from undesired method to desired_method
  # e.g. to use `detect` over `find`:
  #
  # CollectionMethods:
  #   PreferredMethods:
  #     find: detect
  Enabled: true
  PreferredMethods:
    collect: 'map'
    collect!: 'map!'
    inject: 'inject'
    detect: 'find'
    find_all: 'select'

# Force strings to single quotes unless there is a reason to use double quotes
# (such as interpolation or escaping).
Style/StringLiterals:
  EnforcedStyle: single_quotes

# Use UTF-8 as the source file encoding. Use `when_needed` style to only
# require a special comment at the top of the file when non-ascii characters
# are present in the file.
#
# Note: this setting only makes sense when you need to support Ruby versions
# prior to 2.0, since UTF-8 is the default since Ruby 2.
#
# Style/Encoding:
#   Enabled: true
#   EnforcedStyle: when_needed

# Avoid chaining a method call on a do...end block.
Style/MethodCalledOnDoEndBlock:
  Enabled: true

# Use %i or %I for arrays of symbols
Style/SymbolArray:
  Enabled: true

# Require documentation of classes and modules, but not for Rails
# controllers, serializers or modules in unit tests.
Style/Documentation:
  Exclude:
    - app/controllers/**/*
    - app/serializers/**/*
    - app/helpers/application_helper.rb
    - config/application.rb
    - spec/**/*_spec.rb
    - test/**/*_test.rb

# Consider `method *args` ambiguous and require `method(*args)`. The former is
# fine so disable this rule by default.
Lint/AmbiguousOperator:
  Enabled: false

# We are all responsible adults. We know when we mean to write `if a = 5` and when
# we mean to write `if a == 5`.
Lint/AssignmentInCondition:
  Enabled: false

# Prefer alias_method over alias. Disable because alias is fine.
Style/Alias:
  Enabled: false

# Disallow the case equality operator (===). Disable because this is a useful and
# perfectly acceptable practice.
Style/CaseEquality:
  Enabled: false

# Ensure multi-line blocks use `do/end` and single-line blocks use `{/}` as
# delimiters. This is fine rule, except in case of RSpec tests, where the
# `expect { ... }.to` is idiomatically written across multiple lines. Disable
# only in specs.
Style/BlockDelimiters:
  Exclude:
    - spec/**/*_spec.rb

# Ensure short conditionals are written on a single line. The only exception
# here is Rails initializers, which sometimes have entire blocks of code with a
# `if defined?` modifier, which is acceptable.
Style/IfUnlessModifier:
  Exclude:
    - 'config/initializers/*'

# Prefer indented multiline style (less maintenance hassle).
Style/AlignParameters:
  EnforcedStyle: with_fixed_indentation

# Prefer indented multiline style (less maintenance hassle).
Style/MultilineMethodCallIndentation:
  EnforcedStyle: indented

# Ensure indented style is used for multiline operations, not aligned style.
Style/MultilineOperationIndentation:
  EnforcedStyle: indented

# The top-level `describe` call should reference a class or module that is
# under test. This is not the case in some kinds of integration tests that are
# not tied to a particular class or module. Disable this cop in those cases.
RSpec/DescribeClass:
  Exclude:
    - spec/requests/**/*
    - spec/features/**/*
    - spec/views/**/*
